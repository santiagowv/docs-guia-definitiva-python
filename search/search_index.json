{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Contenido","text":"<ul> <li>Introducci\u00f3n y fundamentos</li> <li>Flujos de control</li> </ul>"},{"location":"flujos_control/","title":"Flujos de control","text":""},{"location":"introduccion_fundamentos/","title":"Introducci\u00f3n y fundamentos","text":"<p>Curso completo en campbi.com</p>"},{"location":"introduccion_fundamentos/#primer-programa","title":"Primer programa","text":"<p>En este programa introducimos la funci\u00f3n <code>print()</code> para imprimir datos. <pre><code>print(\"Hola, este es mi primer programa.\")\nprint(\"Segunda l\u00ednea.\")\nprint(\"Tercer l\u00ednea.\")\nprint(\".............\")\n</code></pre></p> <p>Respuesta: <pre><code>Hola, este es mi primer programa.\nSegunda l\u00ednea.\nTercer l\u00ednea.\n.............\n</code></pre></p>"},{"location":"introduccion_fundamentos/#variables","title":"Variables","text":"<p>Las variables son una forma de almacenar datos de cualquier tipo.</p>"},{"location":"introduccion_fundamentos/#declaracion-de-variables","title":"Declaraci\u00f3n de variables","text":"<ul> <li>Declaraci\u00f3n de nuevas variables: <pre><code>nombre_usuario = \"Sebastian\"\n</code></pre></li> <li>Declaraci\u00f3n de variables de tipo constante: <pre><code>NOMBRE_EQUIPO = \"mypc\"\n</code></pre></li> <li>Reasignaci\u00f3n de variables: <pre><code>edad_usuario = 12\nedad_usuario = edad_usuario + 12 \n</code></pre></li> </ul>"},{"location":"introduccion_fundamentos/#reglas-de-nombramiento","title":"Reglas de nombramiento","text":"<ul> <li> <p>Nombramiento de variables:</p> <ul> <li>Deben comenzar con una letra o un guion bajo (\"-\").</li> <li>Pueden contener letras, n\u00fameros y guiones bajos.</li> <li>Python distingue entre may\u00fasculas y min\u00fasculas, es decir, nombre y Nombre son variables diferentes.</li> </ul> </li> <li> <p>Nombres significativos:</p> <ul> <li>Nombres descriptivos que reflejen el prop\u00f3sito o contenido de la variable <pre><code>    # Evitar\n    x = 5\n\n    # Bueno\n    edad_usuario = 25 \n</code></pre></li> </ul> </li> <li>Evitar nombres de variables de una letra.</li> <li>Evitar palabras reservadas de Python como: <code>if</code>, <code>while</code>, <code>for</code>, <code>class</code>, etc.</li> <li>Evitar guiones bajos iniciales     <pre><code>    # Evitar\n    _variable_privada = 42\n</code></pre></li> </ul>"},{"location":"introduccion_fundamentos/#tipos-de-datos","title":"Tipos de datos","text":"<p>Son utilizados para representar los diferentes tipos de valores que un programa puede manipular.</p> <ul> <li>Enteros (<code>int</code>): Representan n\u00fameros enteros sin decimales.     <pre><code>    edad = 25\n    cuenta_regresiva = -45\n</code></pre></li> <li>Flotantes (<code>float</code>): Representan n\u00fameros decimales.     <pre><code>    pi = 3.14159\n    altura = 1.90\n</code></pre></li> <li>Cadenas de texto (<code>str</code>): Representan secuencias de caracteres. Pueden contener letras, n\u00fameros y caracteres especiales.     <pre><code>    nombre = \"Juan\"\n    mensaje = \"Hola, \u00bfC\u00f3mo est\u00e1s?\"\n</code></pre></li> <li> <p>Booleanos (<code>bool</code>): Representan valores de verdad: True o False.     <pre><code>    es_mayor_de_edad = True\n    esta_lloviendo = False\n</code></pre></p> </li> <li> <p>None (<code>None</code>): Representa la ausencia de valor o la falta de un valor v\u00e1lido.      <pre><code>    resultado = None\n</code></pre></p> </li> </ul>"},{"location":"introduccion_fundamentos/#validar-un-tipo-de-dato","title":"Validar un tipo de dato","text":"<p>La funci\u00f3n <code>type()</code> nos permite validar a que tipo de dato corresponde un valor:     <pre><code>    edad_usuario = 34\n    print(type(edad_usuario))\n</code></pre> Respuesta:     <pre><code>     &lt;class 'int'&gt;\n</code></pre></p>"},{"location":"introduccion_fundamentos/#metodos-y-acciones","title":"M\u00e9todos y acciones","text":""},{"location":"introduccion_fundamentos/#strings","title":"Strings:","text":"<ul> <li><code>upper()</code>: Convierte un texto a m\u00e1yuscula.     <pre><code>    nombre_usuario = \"santiago\"\n    nombre_usuario = nombre_usuario.upper() # SANTIAGO\n</code></pre></li> <li><code>lower()</code>: Convierte un texto a m\u00ednuscula.     <pre><code>    nombre_usuario = \"SANTIAGO\"\n    nombre_usuario = nombre_usuario.lower() # santiago\n</code></pre></li> <li><code>capitalize()</code>: Convierte en m\u00e1yuscula la primer letra del texto.     <pre><code>    mensaje = \"hola, bienvenido.\"\n    mensaje = mensaje.capitalize() # Hola, bienvenido.\n</code></pre></li> <li><code>title()</code>: Convierte en m\u00e1yuscula la primer letra de cada palabra.     <pre><code>    usuario = \"andres felipe\"\n    usuario = usuario.title() # Andres Felipe\n</code></pre></li> <li><code>count()</code>: Cuenta la cantidad de apariciones de un caracter dentro de un texto.     <pre><code>    usuario = \"andres felipe\"\n    usuario = usuario.count(e) # 3\n</code></pre></li> <li><code>find()</code>: Regresa la posici\u00f3n inicial de una subcadena de texto dentro de un texto.     <pre><code>    usuario = \"santiago wilches\"\n    usuario = usuario.find(\"wilches\") # 9\n</code></pre></li> <li><code>replace()</code>: Remplaza una subcadena de texto por otra.     <pre><code>    mensaje = \"Hola, bienvenido.\"\n    mensaje = mensaje.replace(\"Hola\", \"Chao\") # Chao, bienvenido.\n</code></pre></li> <li><code>strip()</code>: Elimina los espacios en blanco al inicio y al final de un texto.     <pre><code>    mensaje = \"  Hola, bienvenido.  \"\n    mensaje = mensaje.strip() # Hola, bienvenido.\n</code></pre></li> <li><code>strip()</code>: Elimina los espacios en blanco al inicio y al final de un texto.     <pre><code>    mensaje = \"  Hola, bienvenido.  \"\n    mensaje = mensaje.strip() # Hola, bienvenido.\n</code></pre></li> <li><code>startswith()</code>: Comprueba si una cadena de texto comienza con una subcadena espec\u00edfica.     <pre><code>    mensaje = \"Hola, bienvenido.\"\n    mensaje = mensaje.startswith(\"Hola\") # True\n</code></pre></li> <li><code>endswith()</code>: Comprueba si una cadena de texto termina con una subcadena espec\u00edfica.     <pre><code>    mensaje = \"Hola, bienvenido.\"\n    mensaje = mensaje.endswith(\"Hola\") # False\n</code></pre></li> <li><code>len()</code>: Regresa la longitud de un objeto.     <pre><code>    mensaje = \"Hola\"\n    mensaje = len(mensaje) # Hola\n</code></pre></li> <li><code>+</code>: Concatena cadenas de texto.     <pre><code>    nombre = \"Andrew\"\n    apellido = \"Smith\n    nombre_completo = nombre + \" \" + apellido # Andrew Smith\n</code></pre></li> <li><code>*</code>: Concatena el mismo texto n cantidad de veces.     <pre><code>    nombre = \"Andrew\"\n    nombre = nombre * 4 # AndrewAndrewAndrewAndrew\n</code></pre></li> </ul>"},{"location":"introduccion_fundamentos/#numeros","title":"N\u00fameros:","text":"<ul> <li><code>abs()</code>: Regresa el valor absoluto de un n\u00famero.     <pre><code>    temperatura = -22\n    temperatura = abs(temperatura) # 22\n</code></pre></li> <li><code>round()</code>: Aproxima un n\u00famero con decimales al n\u00famero entero m\u00e1s cercano.     <pre><code>    temperatura = 22.3\n    temperatura = round(temperatura) # 22\n</code></pre></li> </ul>"},{"location":"introduccion_fundamentos/#conversion-de-tipos-de-datos","title":"Conversi\u00f3n de tipos de datos","text":"<ul> <li><code>int()</code>: Convertir a entero.     <pre><code>    numero_string = \"2223\"\n    type(int(2223)) # int\n</code></pre></li> <li><code>str()</code>: Convertir a string.     <pre><code>    numero = 1234\n    type(str(numero)) # str\n</code></pre></li> </ul>"}]}